/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class SwappingSquaresSpinnerComponent {
    constructor() {
        this.animationDuration = 1000;
        this.size = 65;
        this.color = '#fff';
        this.animationBaseName = 'swapping-square-animation-child';
        this.squaresNum = 4;
    }
    /**
     * @return {?}
     */
    get spinnerStyle() {
        return {
            height: `${this.size}px`,
            width: `${this.size}px`
        };
    }
    /**
     * @return {?}
     */
    get squareStyle() {
        return {
            height: `${this.size * 0.25 / 1.3}px`,
            width: `${this.size * 0.25 / 1.3}px`,
            animationDuration: `${this.animationDuration}ms`,
            borderWidth: `${this.size * 0.04 / 1.3}px`,
            borderColor: this.color
        };
    }
    /**
     * @return {?}
     */
    get squaresStyles() {
        /** @type {?} */
        const squaresStyles = [];
        /** @type {?} */
        const delay = this.animationDuration * 0.5;
        for (let i = 1; i <= this.squaresNum; i++) {
            squaresStyles.push(Object.assign({ animationDelay: `${i % 2 === 0 ? delay : 0}ms` }, this.squareStyle));
        }
        return squaresStyles;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
SwappingSquaresSpinnerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-swapping-squares-spinner',
                template: `
    <div class="swapping-squares-spinner" [ngStyle]="spinnerStyle">
      <div class="square"
           *ngFor="let ss of squaresStyles; let i = index;"
           [ngClass]="'square-' + (i + 1)"
           [ngStyle]="ss">
      </div>
    </div>
  `,
                styles: [".swapping-squares-spinner,.swapping-squares-spinner *{box-sizing:border-box}.swapping-squares-spinner{height:65px;width:65px;position:relative;display:flex;flex-direction:row;justify-content:center;align-items:center}.swapping-squares-spinner .square{height:calc(65px * .25 / 1.3);width:calc(65px * .25 / 1.3);-webkit-animation-duration:1s;animation-duration:1s;border:solid #ff1d5e;margin-right:auto;margin-left:auto;position:absolute;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.swapping-squares-spinner .square:nth-child(1){-webkit-animation-name:swapping-squares-animation-child-1;animation-name:swapping-squares-animation-child-1;-webkit-animation-delay:.5s;animation-delay:.5s}.swapping-squares-spinner .square:nth-child(2){-webkit-animation-name:swapping-squares-animation-child-2;animation-name:swapping-squares-animation-child-2;-webkit-animation-delay:0s;animation-delay:0s}.swapping-squares-spinner .square:nth-child(3){-webkit-animation-name:swapping-squares-animation-child-3;animation-name:swapping-squares-animation-child-3;-webkit-animation-delay:.5s;animation-delay:.5s}.swapping-squares-spinner .square:nth-child(4){-webkit-animation-name:swapping-squares-animation-child-4;animation-name:swapping-squares-animation-child-4;-webkit-animation-delay:0s;animation-delay:0s}@-webkit-keyframes swapping-squares-animation-child-1{50%{-webkit-transform:translate(150%,150%) scale(2,2);transform:translate(150%,150%) scale(2,2)}}@keyframes swapping-squares-animation-child-1{50%{-webkit-transform:translate(150%,150%) scale(2,2);transform:translate(150%,150%) scale(2,2)}}@-webkit-keyframes swapping-squares-animation-child-2{50%{-webkit-transform:translate(-150%,150%) scale(2,2);transform:translate(-150%,150%) scale(2,2)}}@keyframes swapping-squares-animation-child-2{50%{-webkit-transform:translate(-150%,150%) scale(2,2);transform:translate(-150%,150%) scale(2,2)}}@-webkit-keyframes swapping-squares-animation-child-3{50%{-webkit-transform:translate(-150%,-150%) scale(2,2);transform:translate(-150%,-150%) scale(2,2)}}@keyframes swapping-squares-animation-child-3{50%{-webkit-transform:translate(-150%,-150%) scale(2,2);transform:translate(-150%,-150%) scale(2,2)}}@-webkit-keyframes swapping-squares-animation-child-4{50%{-webkit-transform:translate(150%,-150%) scale(2,2);transform:translate(150%,-150%) scale(2,2)}}@keyframes swapping-squares-animation-child-4{50%{-webkit-transform:translate(150%,-150%) scale(2,2);transform:translate(150%,-150%) scale(2,2)}}"]
            }] }
];
/** @nocollapse */
SwappingSquaresSpinnerComponent.ctorParameters = () => [];
SwappingSquaresSpinnerComponent.propDecorators = {
    animationDuration: [{ type: Input }],
    size: [{ type: Input }],
    color: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.size;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.color;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.animationBaseName;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.squaresNum;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhcHBpbmctc3F1YXJlcy1zcGlubmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItZXBpYy1zcGlubmVycy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvc3dhcHBpbmctc3F1YXJlcy1zcGlubmVyL3N3YXBwaW5nLXNxdWFyZXMtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBZXZELE1BQU0sT0FBTywrQkFBK0I7SUFFMUM7UUFHUyxzQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFDekIsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNWLFVBQUssR0FBRyxNQUFNLENBQUM7UUFFeEIsc0JBQWlCLEdBQUcsaUNBQWlDLENBQUM7UUFDdEQsZUFBVSxHQUFHLENBQUMsQ0FBQztJQVBmLENBQUM7Ozs7SUFTRCxJQUFJLFlBQVk7UUFDZCxPQUFPO1lBQ0wsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSTtZQUN4QixLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJO1NBQ3hCLENBQUM7SUFDSixDQUFDOzs7O0lBRUQsSUFBSSxXQUFXO1FBQ2IsT0FBTztZQUNMLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxHQUFHLEdBQUcsSUFBSTtZQUNyQyxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksR0FBRyxHQUFHLElBQUk7WUFDcEMsaUJBQWlCLEVBQUUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLElBQUk7WUFDaEQsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsR0FBRyxJQUFJO1lBQzFDLFdBQVcsRUFBRSxJQUFJLENBQUMsS0FBSztTQUN4QixDQUFDO0lBQ0osQ0FBQzs7OztJQUVELElBQUksYUFBYTs7Y0FDVCxhQUFhLEdBQUcsRUFBRTs7Y0FDbEIsS0FBSyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxHQUFHO1FBRTFDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLGFBQWEsQ0FBQyxJQUFJLGlCQUNoQixjQUFjLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFDM0MsSUFBSSxDQUFDLFdBQVcsRUFDbkIsQ0FBQztTQUNKO1FBQ0QsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQzs7OztJQUVELFFBQVE7SUFDUixDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw4QkFBOEI7Z0JBQ3hDLFFBQVEsRUFBRTs7Ozs7Ozs7R0FRVDs7YUFFRjs7Ozs7Z0NBTUUsS0FBSzttQkFDTCxLQUFLO29CQUNMLEtBQUs7Ozs7SUFGTiw0REFBa0M7O0lBQ2xDLCtDQUFtQjs7SUFDbkIsZ0RBQXdCOztJQUV4Qiw0REFBc0Q7O0lBQ3RELHFEQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtc3dhcHBpbmctc3F1YXJlcy1zcGlubmVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwic3dhcHBpbmctc3F1YXJlcy1zcGlubmVyXCIgW25nU3R5bGVdPVwic3Bpbm5lclN0eWxlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3F1YXJlXCJcbiAgICAgICAgICAgKm5nRm9yPVwibGV0IHNzIG9mIHNxdWFyZXNTdHlsZXM7IGxldCBpID0gaW5kZXg7XCJcbiAgICAgICAgICAgW25nQ2xhc3NdPVwiJ3NxdWFyZS0nICsgKGkgKyAxKVwiXG4gICAgICAgICAgIFtuZ1N0eWxlXT1cInNzXCI+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJy4vc3dhcHBpbmctc3F1YXJlcy1zcGlubmVyLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBTd2FwcGluZ1NxdWFyZXNTcGlubmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIEBJbnB1dCgpIGFuaW1hdGlvbkR1cmF0aW9uID0gMTAwMDtcbiAgQElucHV0KCkgc2l6ZSA9IDY1O1xuICBASW5wdXQoKSBjb2xvciA9ICcjZmZmJztcblxuICBhbmltYXRpb25CYXNlTmFtZSA9ICdzd2FwcGluZy1zcXVhcmUtYW5pbWF0aW9uLWNoaWxkJztcbiAgc3F1YXJlc051bSA9IDQ7XG5cbiAgZ2V0IHNwaW5uZXJTdHlsZSgpOiBvYmplY3Qge1xuICAgIHJldHVybiB7XG4gICAgICBoZWlnaHQ6IGAke3RoaXMuc2l6ZX1weGAsXG4gICAgICB3aWR0aDogYCR7dGhpcy5zaXplfXB4YFxuICAgIH07XG4gIH1cblxuICBnZXQgc3F1YXJlU3R5bGUoKTogb2JqZWN0IHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0OiBgJHt0aGlzLnNpemUgKiAwLjI1IC8gMS4zfXB4YCxcbiAgICAgIHdpZHRoOiBgJHt0aGlzLnNpemUgKiAwLjI1IC8gMS4zfXB4YCxcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBgJHt0aGlzLmFuaW1hdGlvbkR1cmF0aW9ufW1zYCxcbiAgICAgIGJvcmRlcldpZHRoOiBgJHt0aGlzLnNpemUgKiAwLjA0IC8gMS4zfXB4YCxcbiAgICAgIGJvcmRlckNvbG9yOiB0aGlzLmNvbG9yXG4gICAgfTtcbiAgfVxuXG4gIGdldCBzcXVhcmVzU3R5bGVzKCk6IG9iamVjdCB7XG4gICAgY29uc3Qgc3F1YXJlc1N0eWxlcyA9IFtdO1xuICAgIGNvbnN0IGRlbGF5ID0gdGhpcy5hbmltYXRpb25EdXJhdGlvbiAqIDAuNTtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRoaXMuc3F1YXJlc051bTsgaSsrKSB7XG4gICAgICBzcXVhcmVzU3R5bGVzLnB1c2goe1xuICAgICAgICBhbmltYXRpb25EZWxheTogYCR7aSAlIDIgPT09IDAgPyBkZWxheSA6IDB9bXNgLFxuICAgICAgICAuLi50aGlzLnNxdWFyZVN0eWxlXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHNxdWFyZXNTdHlsZXM7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=