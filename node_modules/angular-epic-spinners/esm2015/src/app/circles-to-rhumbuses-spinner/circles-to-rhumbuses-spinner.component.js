/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class CirclesToRhumbusesSpinnerComponent {
    constructor() {
        this.circleSize = 15;
        this.circlesNum = 3;
        this.animationDuration = 1200;
        this.color = '#fff';
    }
    /**
     * @return {?}
     */
    get circleMarginLeft() {
        return this.circleSize * 1.125;
    }
    /**
     * @return {?}
     */
    get spinnerStyle() {
        return {
            height: `${this.circleSize}px`,
            width: `${(this.circleSize + this.circleMarginLeft) * this.circlesNum}px`
        };
    }
    /**
     * @return {?}
     */
    get circleStyle() {
        return {
            borderColor: this.color,
            animationDuration: `${this.animationDuration}ms`,
            height: `${this.circleSize}px`,
            width: `${this.circleSize}px`,
            marginLeft: `${this.circleMarginLeft}px`
        };
    }
    /**
     * @return {?}
     */
    get circlesStyles() {
        /** @type {?} */
        const circlesStyles = [];
        /** @type {?} */
        const delay = 150;
        for (let i = 1; i <= this.circlesNum; i++) {
            /** @type {?} */
            const style = Object.assign({}, this.circleStyle, { animationDelay: `${i * delay}ms` });
            circlesStyles.push(style);
        }
        return circlesStyles;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
CirclesToRhumbusesSpinnerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-circles-to-rhumbuses-spinner',
                template: `
    <div class="circles-to-rhombuses-spinner" [ngStyle]="spinnerStyle">
      <div class="circle" *ngFor="let cs of circlesStyles; let i = index;" [ngStyle]="cs"></div>
    </div>
  `,
                styles: [".circles-to-rhombuses-spinner,.circles-to-rhombuses-spinner *{box-sizing:border-box}.circles-to-rhombuses-spinner{height:15px;width:calc((15px + 15px * 1.125) * 3);display:flex;align-items:center;justify-content:center}.circles-to-rhombuses-spinner .circle{height:15px;width:15px;margin-left:calc(15px * 1.125);-webkit-transform:rotate(45deg);transform:rotate(45deg);border-radius:10%;border:3px solid #ff1d5e;overflow:hidden;background:0 0;-webkit-animation:1.2s linear infinite circles-to-rhombuses-animation;animation:1.2s linear infinite circles-to-rhombuses-animation}.circles-to-rhombuses-spinner .circle:nth-child(1){-webkit-animation-delay:calc(150ms * 1);animation-delay:calc(150ms * 1);margin-left:0}.circles-to-rhombuses-spinner .circle:nth-child(2){-webkit-animation-delay:calc(150ms * 2);animation-delay:calc(150ms * 2)}.circles-to-rhombuses-spinner .circle:nth-child(3){-webkit-animation-delay:calc(150ms * 3);animation-delay:calc(150ms * 3)}@-webkit-keyframes circles-to-rhombuses-animation{0%,17.5%{border-radius:10%}50%{border-radius:100%}100%,93.5%{border-radius:10%}}@keyframes circles-to-rhombuses-animation{0%,17.5%{border-radius:10%}50%{border-radius:100%}100%,93.5%{border-radius:10%}}@-webkit-keyframes circles-to-rhombuses-background-animation{50%{opacity:.4}}@keyframes circles-to-rhombuses-background-animation{50%{opacity:.4}}"]
            }] }
];
/** @nocollapse */
CirclesToRhumbusesSpinnerComponent.ctorParameters = () => [];
CirclesToRhumbusesSpinnerComponent.propDecorators = {
    circleSize: [{ type: Input }],
    circlesNum: [{ type: Input }],
    animationDuration: [{ type: Input }],
    color: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    CirclesToRhumbusesSpinnerComponent.prototype.circleSize;
    /** @type {?} */
    CirclesToRhumbusesSpinnerComponent.prototype.circlesNum;
    /** @type {?} */
    CirclesToRhumbusesSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    CirclesToRhumbusesSpinnerComponent.prototype.color;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlcy10by1yaHVtYnVzZXMtc3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWVwaWMtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJzcmMvYXBwL2NpcmNsZXMtdG8tcmh1bWJ1c2VzLXNwaW5uZXIvY2lyY2xlcy10by1yaHVtYnVzZXMtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBV3pELE1BQU0sT0FBTyxrQ0FBa0M7SUFFN0M7UUFHUyxlQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLGVBQVUsR0FBRyxDQUFDLENBQUM7UUFDZixzQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFDekIsVUFBSyxHQUFHLE1BQU0sQ0FBQztJQUx4QixDQUFDOzs7O0lBT0QsSUFBSSxnQkFBZ0I7UUFDbEIsT0FBTyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDOzs7O0lBRUQsSUFBSSxZQUFZO1FBQ2QsT0FBTztZQUNMLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUk7WUFDOUIsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUk7U0FDMUUsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCxJQUFJLFdBQVc7UUFDYixPQUFPO1lBQ0wsV0FBVyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ3ZCLGlCQUFpQixFQUFFLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixJQUFJO1lBQ2hELE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUk7WUFDOUIsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSTtZQUM3QixVQUFVLEVBQUUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLElBQUk7U0FDekMsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCxJQUFJLGFBQWE7O2NBQ1QsYUFBYSxHQUFHLEVBQUU7O2NBQ2xCLEtBQUssR0FBRyxHQUFHO1FBRWpCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFOztrQkFDbkMsS0FBSyxxQkFDTixJQUFJLENBQUMsV0FBVyxJQUNuQixjQUFjLEVBQUUsR0FBRyxDQUFDLEdBQUcsS0FBSyxJQUFJLEdBQ2pDO1lBQ0QsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUMzQjtRQUVELE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxRQUFRO0lBRVIsQ0FBQzs7O1lBekRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0NBQWtDO2dCQUM1QyxRQUFRLEVBQUU7Ozs7R0FJVDs7YUFFRjs7Ozs7eUJBTUUsS0FBSzt5QkFDTCxLQUFLO2dDQUNMLEtBQUs7b0JBQ0wsS0FBSzs7OztJQUhOLHdEQUF5Qjs7SUFDekIsd0RBQXdCOztJQUN4QiwrREFBa0M7O0lBQ2xDLG1EQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtY2lyY2xlcy10by1yaHVtYnVzZXMtc3Bpbm5lcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImNpcmNsZXMtdG8tcmhvbWJ1c2VzLXNwaW5uZXJcIiBbbmdTdHlsZV09XCJzcGlubmVyU3R5bGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjaXJjbGVcIiAqbmdGb3I9XCJsZXQgY3Mgb2YgY2lyY2xlc1N0eWxlczsgbGV0IGkgPSBpbmRleDtcIiBbbmdTdHlsZV09XCJjc1wiPjwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZVVybHM6IFsnLi9jaXJjbGVzLXRvLXJodW1idXNlcy1zcGlubmVyLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBDaXJjbGVzVG9SaHVtYnVzZXNTcGlubmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIEBJbnB1dCgpIGNpcmNsZVNpemUgPSAxNTtcbiAgQElucHV0KCkgY2lyY2xlc051bSA9IDM7XG4gIEBJbnB1dCgpIGFuaW1hdGlvbkR1cmF0aW9uID0gMTIwMDtcbiAgQElucHV0KCkgY29sb3IgPSAnI2ZmZic7XG5cbiAgZ2V0IGNpcmNsZU1hcmdpbkxlZnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2lyY2xlU2l6ZSAqIDEuMTI1O1xuICB9XG5cbiAgZ2V0IHNwaW5uZXJTdHlsZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0OiBgJHt0aGlzLmNpcmNsZVNpemV9cHhgLFxuICAgICAgd2lkdGg6IGAkeyh0aGlzLmNpcmNsZVNpemUgKyB0aGlzLmNpcmNsZU1hcmdpbkxlZnQpICogdGhpcy5jaXJjbGVzTnVtfXB4YFxuICAgIH07XG4gIH1cblxuICBnZXQgY2lyY2xlU3R5bGUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJvcmRlckNvbG9yOiB0aGlzLmNvbG9yLFxuICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGAke3RoaXMuYW5pbWF0aW9uRHVyYXRpb259bXNgLFxuICAgICAgaGVpZ2h0OiBgJHt0aGlzLmNpcmNsZVNpemV9cHhgLFxuICAgICAgd2lkdGg6IGAke3RoaXMuY2lyY2xlU2l6ZX1weGAsXG4gICAgICBtYXJnaW5MZWZ0OiBgJHt0aGlzLmNpcmNsZU1hcmdpbkxlZnR9cHhgXG4gICAgfTtcbiAgfVxuXG4gIGdldCBjaXJjbGVzU3R5bGVzKCkge1xuICAgIGNvbnN0IGNpcmNsZXNTdHlsZXMgPSBbXTtcbiAgICBjb25zdCBkZWxheSA9IDE1MDtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRoaXMuY2lyY2xlc051bTsgaSsrKSB7XG4gICAgICBjb25zdCBzdHlsZSA9IHtcbiAgICAgICAgLi4udGhpcy5jaXJjbGVTdHlsZSxcbiAgICAgICAgYW5pbWF0aW9uRGVsYXk6IGAke2kgKiBkZWxheX1tc2BcbiAgICAgIH07XG4gICAgICBjaXJjbGVzU3R5bGVzLnB1c2goc3R5bGUpO1xuICAgIH1cblxuICAgIHJldHVybiBjaXJjbGVzU3R5bGVzO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG5cbiAgfVxufVxuIl19