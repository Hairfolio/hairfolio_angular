/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class SpringSpinnerComponent {
    constructor() {
        this.size = 60;
        this.color = '#fff';
        this.animationDuration = 2000;
        this.animationBaseName = 'spring-spinner-animation';
        this.currentAnimationName = '';
    }
    /**
     * @return {?}
     */
    get spinnerStyle() {
        return {
            height: `${this.size}px`,
            width: `${this.size}px`
        };
    }
    /**
     * @return {?}
     */
    get spinnerPartStyle() {
        return {
            height: `${this.size / 2}px`,
            width: `${this.size}px`
        };
    }
    /**
     * @return {?}
     */
    get rotatorStyle() {
        return {
            height: `${this.size}px`,
            width: `${this.size}px`,
            borderRightColor: this.color,
            borderTopColor: this.color,
            borderWidth: `${this.size / 7}px`,
            animationDuration: `${this.animationDuration}ms`,
            animationName: this.currentAnimationName
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
SpringSpinnerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-spring-spinner',
                template: `
    <div class="spring-spinner" [ngStyle]="spinnerStyle">
      <div class="spring-spinner-part top" [ngStyle]="spinnerPartStyle">
        <div class="spring-spinner-rotator" [ngStyle]="rotatorStyle"></div>
      </div>
      <div class="spring-spinner-part bottom" [ngStyle]="spinnerPartStyle">
        <div class="spring-spinner-rotator" [ngStyle]="rotatorStyle"></div>
      </div>
    </div>
  `,
                styles: [".spring-spinner,.spring-spinner *{box-sizing:border-box}.spring-spinner{height:60px;width:60px}.spring-spinner .spring-spinner-part{overflow:hidden;height:calc(60px / 2);width:60px}.spring-spinner .spring-spinner-part.bottom{-webkit-transform:rotate(180deg) scale(-1,1);transform:rotate(180deg) scale(-1,1)}.spring-spinner .spring-spinner-rotator{width:60px;height:60px;border:solid transparent;border-right-color:#ff1d5e;border-top-color:#ff1d5e;border-radius:50%;box-sizing:border-box;-webkit-animation:3s ease-in-out infinite spring-spinner-animation;animation:3s ease-in-out infinite spring-spinner-animation;-webkit-transform:rotate(-200deg);transform:rotate(-200deg)}@-webkit-keyframes spring-spinner-animation{0%,100%{border-width:calc(60px / 7)}25%,75%{border-width:calc(60px / 23.33)}50%{-webkit-transform:rotate(115deg);transform:rotate(115deg);border-width:calc(60px / 7)}}@keyframes spring-spinner-animation{0%,100%{border-width:calc(60px / 7)}25%,75%{border-width:calc(60px / 23.33)}50%{-webkit-transform:rotate(115deg);transform:rotate(115deg);border-width:calc(60px / 7)}}"]
            }] }
];
/** @nocollapse */
SpringSpinnerComponent.ctorParameters = () => [];
SpringSpinnerComponent.propDecorators = {
    size: [{ type: Input }],
    color: [{ type: Input }],
    animationDuration: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SpringSpinnerComponent.prototype.size;
    /** @type {?} */
    SpringSpinnerComponent.prototype.color;
    /** @type {?} */
    SpringSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    SpringSpinnerComponent.prototype.animationBaseName;
    /** @type {?} */
    SpringSpinnerComponent.prototype.currentAnimationName;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ByaW5nLXNwaW5uZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1lcGljLXNwaW5uZXJzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9zcHJpbmctc3Bpbm5lci9zcHJpbmctc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBZ0J2RCxNQUFNLE9BQU8sc0JBQXNCO0lBRWpDO1FBR1MsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNWLFVBQUssR0FBRyxNQUFNLENBQUM7UUFDZixzQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFFbEMsc0JBQWlCLEdBQUcsMEJBQTBCLENBQUM7UUFDL0MseUJBQW9CLEdBQUcsRUFBRSxDQUFDO0lBUDFCLENBQUM7Ozs7SUFTRCxJQUFJLFlBQVk7UUFDZCxPQUFPO1lBQ0wsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSTtZQUN4QixLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJO1NBQ3hCLENBQUM7SUFDSixDQUFDOzs7O0lBRUQsSUFBSSxnQkFBZ0I7UUFDbEIsT0FBTztZQUNMLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJO1lBQzVCLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUk7U0FDeEIsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCxJQUFJLFlBQVk7UUFDZCxPQUFPO1lBQ0wsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSTtZQUN4QixLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJO1lBQ3ZCLGdCQUFnQixFQUFFLElBQUksQ0FBQyxLQUFLO1lBQzVCLGNBQWMsRUFBRSxJQUFJLENBQUMsS0FBSztZQUMxQixXQUFXLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSTtZQUNqQyxpQkFBaUIsRUFBRSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsSUFBSTtZQUNoRCxhQUFhLEVBQUUsSUFBSSxDQUFDLG9CQUFvQjtTQUN6QyxDQUFDO0lBQ0osQ0FBQzs7OztJQUVELFFBQVE7SUFDUixDQUFDOzs7WUFyREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLFFBQVEsRUFBRTs7Ozs7Ozs7O0dBU1Q7O2FBRUY7Ozs7O21CQU1FLEtBQUs7b0JBQ0wsS0FBSztnQ0FDTCxLQUFLOzs7O0lBRk4sc0NBQW1COztJQUNuQix1Q0FBd0I7O0lBQ3hCLG1EQUFrQzs7SUFFbEMsbURBQStDOztJQUMvQyxzREFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1zcHJpbmctc3Bpbm5lcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cInNwcmluZy1zcGlubmVyXCIgW25nU3R5bGVdPVwic3Bpbm5lclN0eWxlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3ByaW5nLXNwaW5uZXItcGFydCB0b3BcIiBbbmdTdHlsZV09XCJzcGlubmVyUGFydFN0eWxlXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzcHJpbmctc3Bpbm5lci1yb3RhdG9yXCIgW25nU3R5bGVdPVwicm90YXRvclN0eWxlXCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzcHJpbmctc3Bpbm5lci1wYXJ0IGJvdHRvbVwiIFtuZ1N0eWxlXT1cInNwaW5uZXJQYXJ0U3R5bGVcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNwcmluZy1zcGlubmVyLXJvdGF0b3JcIiBbbmdTdHlsZV09XCJyb3RhdG9yU3R5bGVcIj48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZVVybHM6IFsnLi9zcHJpbmctc3Bpbm5lci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgU3ByaW5nU3Bpbm5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICBASW5wdXQoKSBzaXplID0gNjA7XG4gIEBJbnB1dCgpIGNvbG9yID0gJyNmZmYnO1xuICBASW5wdXQoKSBhbmltYXRpb25EdXJhdGlvbiA9IDIwMDA7XG5cbiAgYW5pbWF0aW9uQmFzZU5hbWUgPSAnc3ByaW5nLXNwaW5uZXItYW5pbWF0aW9uJztcbiAgY3VycmVudEFuaW1hdGlvbk5hbWUgPSAnJztcblxuICBnZXQgc3Bpbm5lclN0eWxlKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhlaWdodDogYCR7dGhpcy5zaXplfXB4YCxcbiAgICAgIHdpZHRoOiBgJHt0aGlzLnNpemV9cHhgXG4gICAgfTtcbiAgfVxuXG4gIGdldCBzcGlubmVyUGFydFN0eWxlKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhlaWdodDogYCR7dGhpcy5zaXplIC8gMn1weGAsXG4gICAgICB3aWR0aDogYCR7dGhpcy5zaXplfXB4YFxuICAgIH07XG4gIH1cblxuICBnZXQgcm90YXRvclN0eWxlKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhlaWdodDogYCR7dGhpcy5zaXplfXB4YCxcbiAgICAgIHdpZHRoOiBgJHt0aGlzLnNpemV9cHhgLFxuICAgICAgYm9yZGVyUmlnaHRDb2xvcjogdGhpcy5jb2xvcixcbiAgICAgIGJvcmRlclRvcENvbG9yOiB0aGlzLmNvbG9yLFxuICAgICAgYm9yZGVyV2lkdGg6IGAke3RoaXMuc2l6ZSAvIDd9cHhgLFxuICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGAke3RoaXMuYW5pbWF0aW9uRHVyYXRpb259bXNgLFxuICAgICAgYW5pbWF0aW9uTmFtZTogdGhpcy5jdXJyZW50QW5pbWF0aW9uTmFtZVxuICAgIH07XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=