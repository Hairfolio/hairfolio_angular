/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class PixelSpinnerComponent {
    constructor() {
        this.animationDuration = 1000;
        this.size = 50;
        this.color = '#fff';
        this.animationBaseName = 'pixel-spinner-animation';
        this.currentAnimationName = '';
    }
    /**
     * @return {?}
     */
    get pixelSize() {
        return this.size / 7;
    }
    /**
     * @return {?}
     */
    get spinnerStyle() {
        return {
            width: `${this.size}px`,
            height: `${this.size}px`
        };
    }
    /**
     * @return {?}
     */
    get spinnerInnerStyle() {
        return {
            animationDuration: `${this.animationDuration}ms`,
            animationName: this.currentAnimationName,
            width: `${this.pixelSize}px`,
            height: `${this.pixelSize}px`,
            backgroundColor: this.color,
            color: this.color,
            boxShadow: `
                        ${this.pixelSize * 1.5}px ${this.pixelSize * 1.5}px 0 0,
                        ${this.pixelSize * -1.5}px ${this.pixelSize * -1.5}px 0 0,
                        ${this.pixelSize * 1.5}px ${this.pixelSize * -1.5}px 0 0,
                        ${this.pixelSize * -1.5}px ${this.pixelSize * 1.5}px 0 0,
                        0 ${this.pixelSize * 1.5}px 0 0,
                        ${this.pixelSize * 1.5}px 0 0 0,
                        ${this.pixelSize * -1.5}px 0 0 0,
                        0 ${this.pixelSize * -1.5}px 0 0
                      `
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
PixelSpinnerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-pixel-spinner',
                template: `
    <div class="pixel-spinner" [ngStyle]="spinnerStyle">
      <div class="pixel-spinner-inner" [ngStyle]="spinnerInnerStyle"></div>
    </div>
  `,
                styles: [".pixel-spinner,.pixel-spinner *{box-sizing:border-box}.pixel-spinner{height:70px;width:70px;display:flex;flex-direction:row;justify-content:center;align-items:center}.pixel-spinner .pixel-spinner-inner{width:calc(70px / 7);height:calc(70px / 7);background-color:#ff1d5e;color:#ff1d5e;box-shadow:15px 15px 0 0,-15px -15px 0 0,15px -15px 0 0,-15px 15px 0 0,0 15px 0 0,15px 0 0 0,-15px 0 0 0,0 -15px 0 0;-webkit-animation:2s linear infinite pixel-spinner-animation;animation:2s linear infinite pixel-spinner-animation}@-webkit-keyframes pixel-spinner-animation{50%,75%{box-shadow:20px 20px 0 0,-20px -20px 0 0,20px -20px 0 0,-20px 20px 0 0,0 10px 0 0,10px 0 0 0,-10px 0 0 0,0 -10px 0 0}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes pixel-spinner-animation{50%,75%{box-shadow:20px 20px 0 0,-20px -20px 0 0,20px -20px 0 0,-20px 20px 0 0,0 10px 0 0,10px 0 0 0,-10px 0 0 0,0 -10px 0 0}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}"]
            }] }
];
/** @nocollapse */
PixelSpinnerComponent.ctorParameters = () => [];
PixelSpinnerComponent.propDecorators = {
    animationDuration: [{ type: Input }],
    size: [{ type: Input }],
    color: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PixelSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    PixelSpinnerComponent.prototype.size;
    /** @type {?} */
    PixelSpinnerComponent.prototype.color;
    /** @type {?} */
    PixelSpinnerComponent.prototype.animationBaseName;
    /** @type {?} */
    PixelSpinnerComponent.prototype.currentAnimationName;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGl4ZWwtc3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWVwaWMtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJzcmMvYXBwL3BpeGVsLXNwaW5uZXIvcGl4ZWwtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBV3pELE1BQU0sT0FBTyxxQkFBcUI7SUFFaEM7UUFHUyxzQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFDekIsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNWLFVBQUssR0FBRyxNQUFNLENBQUM7UUFFeEIsc0JBQWlCLEdBQUcseUJBQXlCLENBQUM7UUFDOUMseUJBQW9CLEdBQUcsRUFBRSxDQUFDO0lBUDFCLENBQUM7Ozs7SUFTRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxJQUFJLFlBQVk7UUFDZCxPQUFPO1lBQ0wsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSTtZQUN2QixNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJO1NBQ3pCLENBQUM7SUFDSixDQUFDOzs7O0lBRUQsSUFBSSxpQkFBaUI7UUFDbkIsT0FBTztZQUNMLGlCQUFpQixFQUFFLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixJQUFJO1lBQ2hELGFBQWEsRUFBRSxJQUFJLENBQUMsb0JBQW9CO1lBQ3hDLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUk7WUFDNUIsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsSUFBSTtZQUM3QixlQUFlLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDM0IsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLFNBQVMsRUFBRTswQkFDUyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUc7MEJBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxHQUFHLE1BQU0sSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLEdBQUc7MEJBQ2hELElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxNQUFNLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxHQUFHOzBCQUMvQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsR0FBRyxNQUFNLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRzs0QkFDN0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHOzBCQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUc7MEJBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxHQUFHOzRCQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsR0FBRzt1QkFDMUI7U0FDbEIsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCxRQUFRO0lBQ1IsQ0FBQzs7O1lBdERGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUU7Ozs7R0FJVDs7YUFFRjs7Ozs7Z0NBTUUsS0FBSzttQkFDTCxLQUFLO29CQUNMLEtBQUs7Ozs7SUFGTixrREFBa0M7O0lBQ2xDLHFDQUFtQjs7SUFDbkIsc0NBQXdCOztJQUV4QixrREFBOEM7O0lBQzlDLHFEQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtcGl4ZWwtc3Bpbm5lcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cInBpeGVsLXNwaW5uZXJcIiBbbmdTdHlsZV09XCJzcGlubmVyU3R5bGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJwaXhlbC1zcGlubmVyLWlubmVyXCIgW25nU3R5bGVdPVwic3Bpbm5lcklubmVyU3R5bGVcIj48L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJy4vcGl4ZWwtc3Bpbm5lci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUGl4ZWxTcGlubmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIEBJbnB1dCgpIGFuaW1hdGlvbkR1cmF0aW9uID0gMTAwMDtcbiAgQElucHV0KCkgc2l6ZSA9IDUwO1xuICBASW5wdXQoKSBjb2xvciA9ICcjZmZmJztcblxuICBhbmltYXRpb25CYXNlTmFtZSA9ICdwaXhlbC1zcGlubmVyLWFuaW1hdGlvbic7XG4gIGN1cnJlbnRBbmltYXRpb25OYW1lID0gJyc7XG5cbiAgZ2V0IHBpeGVsU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNpemUgLyA3O1xuICB9XG5cbiAgZ2V0IHNwaW5uZXJTdHlsZSgpOiBvYmplY3Qge1xuICAgIHJldHVybiB7XG4gICAgICB3aWR0aDogYCR7dGhpcy5zaXplfXB4YCxcbiAgICAgIGhlaWdodDogYCR7dGhpcy5zaXplfXB4YFxuICAgIH07XG4gIH1cblxuICBnZXQgc3Bpbm5lcklubmVyU3R5bGUoKTogb2JqZWN0IHtcbiAgICByZXR1cm4ge1xuICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGAke3RoaXMuYW5pbWF0aW9uRHVyYXRpb259bXNgLFxuICAgICAgYW5pbWF0aW9uTmFtZTogdGhpcy5jdXJyZW50QW5pbWF0aW9uTmFtZSxcbiAgICAgIHdpZHRoOiBgJHt0aGlzLnBpeGVsU2l6ZX1weGAsXG4gICAgICBoZWlnaHQ6IGAke3RoaXMucGl4ZWxTaXplfXB4YCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5jb2xvcixcbiAgICAgIGNvbG9yOiB0aGlzLmNvbG9yLFxuICAgICAgYm94U2hhZG93OiBgXG4gICAgICAgICAgICAgICAgICAgICAgICAke3RoaXMucGl4ZWxTaXplICogMS41fXB4ICR7dGhpcy5waXhlbFNpemUgKiAxLjV9cHggMCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHt0aGlzLnBpeGVsU2l6ZSAqIC0xLjV9cHggJHt0aGlzLnBpeGVsU2l6ZSAqIC0xLjV9cHggMCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHt0aGlzLnBpeGVsU2l6ZSAqIDEuNX1weCAke3RoaXMucGl4ZWxTaXplICogLTEuNX1weCAwIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAke3RoaXMucGl4ZWxTaXplICogLTEuNX1weCAke3RoaXMucGl4ZWxTaXplICogMS41fXB4IDAgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIDAgJHt0aGlzLnBpeGVsU2l6ZSAqIDEuNX1weCAwIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAke3RoaXMucGl4ZWxTaXplICogMS41fXB4IDAgMCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHt0aGlzLnBpeGVsU2l6ZSAqIC0xLjV9cHggMCAwIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAwICR7dGhpcy5waXhlbFNpemUgKiAtMS41fXB4IDAgMFxuICAgICAgICAgICAgICAgICAgICAgIGBcbiAgICB9O1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19