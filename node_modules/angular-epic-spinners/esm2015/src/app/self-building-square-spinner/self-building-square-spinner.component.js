/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class SelfBuildingSquareSpinnerComponent {
    constructor() {
        this.animationDuration = 6000;
        this.size = 40;
        this.color = '#fff';
        this.squaresNum = 9;
    }
    /**
     * @return {?}
     */
    get squareSize() {
        return this.size / 4;
    }
    /**
     * @return {?}
     */
    get initialTopPosition() {
        return -this.squareSize * 2 / 3;
    }
    /**
     * @return {?}
     */
    get spinnerStyle() {
        return {
            top: `${-this.initialTopPosition}px`,
            height: `${this.size}px`,
            width: `${this.size}px`
        };
    }
    /**
     * @return {?}
     */
    get squareStyle() {
        return {
            height: `${this.squareSize}px`,
            width: `${this.squareSize}px`,
            top: `${this.initialTopPosition}px`,
            marginRight: `${this.squareSize / 3}px`,
            marginTop: `${this.squareSize / 3}px`,
            animationDuration: `${this.animationDuration}ms`,
            background: this.color
        };
    }
    /**
     * @return {?}
     */
    get squaresStyles() {
        /** @type {?} */
        const squaresStyles = [];
        /** @type {?} */
        const delaysMultipliers = [6, 7, 8, 3, 4, 5, 0, 1, 2];
        /** @type {?} */
        const delayModifier = this.animationDuration * 0.05;
        for (let i = 0; i < this.squaresNum; i++) {
            squaresStyles.push(Object.assign({ animationDelay: `${delayModifier * delaysMultipliers[i]}ms` }, this.squareStyle));
        }
        return squaresStyles;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
SelfBuildingSquareSpinnerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-self-building-square-spinner',
                template: `
    <div class="self-building-square-spinner" [ngStyle]="spinnerStyle">
      <div class="square"
           *ngFor="let ss of squaresStyles; let i = index;"
           [ngStyle]="ss"
           [ngClass]="{'clear': i && i % 3 === 0}"
      >
      </div>
    </div>
  `,
                styles: [".self-building-square-spinner,.self-building-square-spinner *{box-sizing:border-box}.self-building-square-spinner{height:40px;width:40px;top:calc(-10px * 2 / 3)}.self-building-square-spinner .square{height:10px;width:10px;top:calc(-10px * 2 / 3);margin-right:calc(10px / 3);margin-top:calc(10px / 3);background:#ff1d5e;float:left;position:relative;opacity:0;-webkit-animation:6s infinite self-building-square-spinner;animation:6s infinite self-building-square-spinner}.self-building-square-spinner .square:nth-child(1){-webkit-animation-delay:calc(300ms * 6);animation-delay:calc(300ms * 6)}.self-building-square-spinner .square:nth-child(2){-webkit-animation-delay:calc(300ms * 7);animation-delay:calc(300ms * 7)}.self-building-square-spinner .square:nth-child(3){-webkit-animation-delay:calc(300ms * 8);animation-delay:calc(300ms * 8)}.self-building-square-spinner .square:nth-child(4){-webkit-animation-delay:calc(300ms * 3);animation-delay:calc(300ms * 3)}.self-building-square-spinner .square:nth-child(5){-webkit-animation-delay:calc(300ms * 4);animation-delay:calc(300ms * 4)}.self-building-square-spinner .square:nth-child(6){-webkit-animation-delay:calc(300ms * 5);animation-delay:calc(300ms * 5)}.self-building-square-spinner .square:nth-child(7){-webkit-animation-delay:calc(300ms * 0);animation-delay:calc(300ms * 0)}.self-building-square-spinner .square:nth-child(8){-webkit-animation-delay:calc(300ms * 1);animation-delay:calc(300ms * 1)}.self-building-square-spinner .square:nth-child(9){-webkit-animation-delay:calc(300ms * 2);animation-delay:calc(300ms * 2)}.self-building-square-spinner .clear{clear:both}@-webkit-keyframes self-building-square-spinner{0%{opacity:0}5%,50.9%{opacity:1;top:0}55.9%{opacity:0;top:inherit}}@keyframes self-building-square-spinner{0%{opacity:0}5%,50.9%{opacity:1;top:0}55.9%{opacity:0;top:inherit}}"]
            }] }
];
/** @nocollapse */
SelfBuildingSquareSpinnerComponent.ctorParameters = () => [];
SelfBuildingSquareSpinnerComponent.propDecorators = {
    animationDuration: [{ type: Input }],
    size: [{ type: Input }],
    color: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SelfBuildingSquareSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    SelfBuildingSquareSpinnerComponent.prototype.size;
    /** @type {?} */
    SelfBuildingSquareSpinnerComponent.prototype.color;
    /** @type {?} */
    SelfBuildingSquareSpinnerComponent.prototype.squaresNum;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZi1idWlsZGluZy1zcXVhcmUtc3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWVwaWMtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJzcmMvYXBwL3NlbGYtYnVpbGRpbmctc3F1YXJlLXNwaW5uZXIvc2VsZi1idWlsZGluZy1zcXVhcmUtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBZ0J2RCxNQUFNLE9BQU8sa0NBQWtDO0lBRTdDO1FBR1Msc0JBQWlCLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLFNBQUksR0FBRyxFQUFFLENBQUM7UUFDVixVQUFLLEdBQUcsTUFBTSxDQUFDO1FBRXhCLGVBQVUsR0FBRyxDQUFDLENBQUM7SUFOZixDQUFDOzs7O0lBUUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDOzs7O0lBRUQsSUFBSSxrQkFBa0I7UUFDcEIsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBRUQsSUFBSSxZQUFZO1FBQ2QsT0FBTztZQUNMLEdBQUcsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLGtCQUFrQixJQUFJO1lBQ3BDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUk7WUFDeEIsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSTtTQUN4QixDQUFDO0lBQ0osQ0FBQzs7OztJQUVELElBQUksV0FBVztRQUNiLE9BQU87WUFDTCxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsVUFBVSxJQUFJO1lBQzlCLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUk7WUFDN0IsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixJQUFJO1lBQ25DLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJO1lBQ3ZDLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJO1lBQ3JDLGlCQUFpQixFQUFFLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixJQUFJO1lBQ2hELFVBQVUsRUFBRSxJQUFJLENBQUMsS0FBSztTQUN2QixDQUFDO0lBQ0osQ0FBQzs7OztJQUVELElBQUksYUFBYTs7Y0FDVCxhQUFhLEdBQUcsRUFBRTs7Y0FDbEIsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQzs7Y0FDL0MsYUFBYSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJO1FBQ25ELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hDLGFBQWEsQ0FBQyxJQUFJLGlCQUNoQixjQUFjLEVBQUUsR0FBRyxhQUFhLEdBQUcsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLElBQUksSUFDeEQsSUFBSSxDQUFDLFdBQVcsRUFDbkIsQ0FBQztTQUNKO1FBQ0QsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQzs7OztJQUVELFFBQVE7SUFDUixDQUFDOzs7WUFuRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQ0FBa0M7Z0JBQzVDLFFBQVEsRUFBRTs7Ozs7Ozs7O0dBU1Q7O2FBRUY7Ozs7O2dDQU1FLEtBQUs7bUJBQ0wsS0FBSztvQkFDTCxLQUFLOzs7O0lBRk4sK0RBQWtDOztJQUNsQyxrREFBbUI7O0lBQ25CLG1EQUF3Qjs7SUFFeEIsd0RBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1zZWxmLWJ1aWxkaW5nLXNxdWFyZS1zcGlubmVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwic2VsZi1idWlsZGluZy1zcXVhcmUtc3Bpbm5lclwiIFtuZ1N0eWxlXT1cInNwaW5uZXJTdHlsZVwiPlxuICAgICAgPGRpdiBjbGFzcz1cInNxdWFyZVwiXG4gICAgICAgICAgICpuZ0Zvcj1cImxldCBzcyBvZiBzcXVhcmVzU3R5bGVzOyBsZXQgaSA9IGluZGV4O1wiXG4gICAgICAgICAgIFtuZ1N0eWxlXT1cInNzXCJcbiAgICAgICAgICAgW25nQ2xhc3NdPVwieydjbGVhcic6IGkgJiYgaSAlIDMgPT09IDB9XCJcbiAgICAgID5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZVVybHM6IFsnLi9zZWxmLWJ1aWxkaW5nLXNxdWFyZS1zcGlubmVyLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBTZWxmQnVpbGRpbmdTcXVhcmVTcGlubmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIEBJbnB1dCgpIGFuaW1hdGlvbkR1cmF0aW9uID0gNjAwMDtcbiAgQElucHV0KCkgc2l6ZSA9IDQwO1xuICBASW5wdXQoKSBjb2xvciA9ICcjZmZmJztcblxuICBzcXVhcmVzTnVtID0gOTtcblxuICBnZXQgc3F1YXJlU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNpemUgLyA0O1xuICB9XG5cbiAgZ2V0IGluaXRpYWxUb3BQb3NpdGlvbigpOiBudW1iZXIge1xuICAgIHJldHVybiAtdGhpcy5zcXVhcmVTaXplICogMiAvIDM7XG4gIH1cblxuICBnZXQgc3Bpbm5lclN0eWxlKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRvcDogYCR7LXRoaXMuaW5pdGlhbFRvcFBvc2l0aW9ufXB4YCxcbiAgICAgIGhlaWdodDogYCR7dGhpcy5zaXplfXB4YCxcbiAgICAgIHdpZHRoOiBgJHt0aGlzLnNpemV9cHhgXG4gICAgfTtcbiAgfVxuXG4gIGdldCBzcXVhcmVTdHlsZSgpOiBvYmplY3Qge1xuICAgIHJldHVybiB7XG4gICAgICBoZWlnaHQ6IGAke3RoaXMuc3F1YXJlU2l6ZX1weGAsXG4gICAgICB3aWR0aDogYCR7dGhpcy5zcXVhcmVTaXplfXB4YCxcbiAgICAgIHRvcDogYCR7dGhpcy5pbml0aWFsVG9wUG9zaXRpb259cHhgLFxuICAgICAgbWFyZ2luUmlnaHQ6IGAke3RoaXMuc3F1YXJlU2l6ZSAvIDN9cHhgLFxuICAgICAgbWFyZ2luVG9wOiBgJHt0aGlzLnNxdWFyZVNpemUgLyAzfXB4YCxcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBgJHt0aGlzLmFuaW1hdGlvbkR1cmF0aW9ufW1zYCxcbiAgICAgIGJhY2tncm91bmQ6IHRoaXMuY29sb3JcbiAgICB9O1xuICB9XG5cbiAgZ2V0IHNxdWFyZXNTdHlsZXMoKTogb2JqZWN0IHtcbiAgICBjb25zdCBzcXVhcmVzU3R5bGVzID0gW107XG4gICAgY29uc3QgZGVsYXlzTXVsdGlwbGllcnMgPSBbNiwgNywgOCwgMywgNCwgNSwgMCwgMSwgMl07XG4gICAgY29uc3QgZGVsYXlNb2RpZmllciA9IHRoaXMuYW5pbWF0aW9uRHVyYXRpb24gKiAwLjA1O1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zcXVhcmVzTnVtOyBpKyspIHtcbiAgICAgIHNxdWFyZXNTdHlsZXMucHVzaCh7XG4gICAgICAgIGFuaW1hdGlvbkRlbGF5OiBgJHtkZWxheU1vZGlmaWVyICogZGVsYXlzTXVsdGlwbGllcnNbaV19bXNgLFxuICAgICAgICAuLi50aGlzLnNxdWFyZVN0eWxlXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHNxdWFyZXNTdHlsZXM7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=