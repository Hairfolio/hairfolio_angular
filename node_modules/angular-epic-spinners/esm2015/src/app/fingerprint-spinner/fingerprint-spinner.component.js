/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class FingerprintSpinnerComponent {
    constructor() {
        this.size = 60;
        this.animationDuration = 1500;
        this.color = '#fff';
        this.ringsNum = 9;
        this.containerPadding = 2;
    }
    /**
     * @return {?}
     */
    get outerRingSize() {
        return this.size - this.containerPadding * 2;
    }
    /**
     * @return {?}
     */
    get spinnerStyle() {
        return {
            height: `${this.size}px`,
            width: `${this.size}px`,
            padding: `${this.containerPadding}px`
        };
    }
    /**
     * @return {?}
     */
    get ringStyle() {
        return {
            borderTopColor: this.color,
            animationDuration: `${this.animationDuration}ms`
        };
    }
    /**
     * @return {?}
     */
    get ringsStyles() {
        /** @type {?} */
        const ringsStyles = [];
        /** @type {?} */
        const ringBase = this.outerRingSize / (this.ringsNum);
        /** @type {?} */
        const ringInc = ringBase;
        for (let i = 1; i <= this.ringsNum; i++) {
            ringsStyles.push(Object.assign({}, this.ringStyle, { animationDelay: `${i * 50}ms`, height: `${ringBase + (i + 1) * ringInc}px`, width: `${ringBase + (i + 1) * ringInc}px` }));
        }
        return ringsStyles;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
FingerprintSpinnerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-fingerprint-spinner',
                template: `
    <div class="fingerprint-spinner" [ngStyle]="spinnerStyle">
      <div class="spinner-ring" *ngFor="let rs of ringsStyles" [ngStyle]="rs"></div>
    </div>

  `,
                styles: [".fingerprint-spinner,.fingerprint-spinner *{box-sizing:border-box}.fingerprint-spinner{height:64px;width:64px;padding:2px;overflow:hidden;position:relative}.fingerprint-spinner .spinner-ring{position:absolute;border-radius:50%;border:2px solid transparent;border-top-color:#ff1d5e;-webkit-animation:1.5s cubic-bezier(.68,-.75,.265,1.75) infinite forwards fingerprint-spinner-animation;animation:1.5s cubic-bezier(.68,-.75,.265,1.75) infinite forwards fingerprint-spinner-animation;margin:auto;bottom:0;left:0;right:0;top:0}.fingerprint-spinner .spinner-ring:nth-child(1){height:calc(60px / 9 + 0 * 60px / 9);width:calc(60px / 9 + 0 * 60px / 9);-webkit-animation-delay:calc(50ms * 1);animation-delay:calc(50ms * 1)}.fingerprint-spinner .spinner-ring:nth-child(2){height:calc(60px / 9 + 1 * 60px / 9);width:calc(60px / 9 + 1 * 60px / 9);-webkit-animation-delay:calc(50ms * 2);animation-delay:calc(50ms * 2)}.fingerprint-spinner .spinner-ring:nth-child(3){height:calc(60px / 9 + 2 * 60px / 9);width:calc(60px / 9 + 2 * 60px / 9);-webkit-animation-delay:calc(50ms * 3);animation-delay:calc(50ms * 3)}.fingerprint-spinner .spinner-ring:nth-child(4){height:calc(60px / 9 + 3 * 60px / 9);width:calc(60px / 9 + 3 * 60px / 9);-webkit-animation-delay:calc(50ms * 4);animation-delay:calc(50ms * 4)}.fingerprint-spinner .spinner-ring:nth-child(5){height:calc(60px / 9 + 4 * 60px / 9);width:calc(60px / 9 + 4 * 60px / 9);-webkit-animation-delay:calc(50ms * 5);animation-delay:calc(50ms * 5)}.fingerprint-spinner .spinner-ring:nth-child(6){height:calc(60px / 9 + 5 * 60px / 9);width:calc(60px / 9 + 5 * 60px / 9);-webkit-animation-delay:calc(50ms * 6);animation-delay:calc(50ms * 6)}.fingerprint-spinner .spinner-ring:nth-child(7){height:calc(60px / 9 + 6 * 60px / 9);width:calc(60px / 9 + 6 * 60px / 9);-webkit-animation-delay:calc(50ms * 7);animation-delay:calc(50ms * 7)}.fingerprint-spinner .spinner-ring:nth-child(8){height:calc(60px / 9 + 7 * 60px / 9);width:calc(60px / 9 + 7 * 60px / 9);-webkit-animation-delay:calc(50ms * 8);animation-delay:calc(50ms * 8)}.fingerprint-spinner .spinner-ring:nth-child(9){height:calc(60px / 9 + 8 * 60px / 9);width:calc(60px / 9 + 8 * 60px / 9);-webkit-animation-delay:calc(50ms * 9);animation-delay:calc(50ms * 9)}@-webkit-keyframes fingerprint-spinner-animation{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fingerprint-spinner-animation{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}"]
            }] }
];
/** @nocollapse */
FingerprintSpinnerComponent.ctorParameters = () => [];
FingerprintSpinnerComponent.propDecorators = {
    size: [{ type: Input }],
    animationDuration: [{ type: Input }],
    color: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.size;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.color;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.ringsNum;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.containerPadding;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZ2VycHJpbnQtc3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWVwaWMtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJzcmMvYXBwL2ZpbmdlcnByaW50LXNwaW5uZXIvZmluZ2VycHJpbnQtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBWXpELE1BQU0sT0FBTywyQkFBMkI7SUFFdEM7UUFHUyxTQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ1Ysc0JBQWlCLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLFVBQUssR0FBRyxNQUFNLENBQUM7UUFFeEIsYUFBUSxHQUFHLENBQUMsQ0FBQztRQUNiLHFCQUFnQixHQUFHLENBQUMsQ0FBQztJQVByQixDQUFDOzs7O0lBU0QsSUFBSSxhQUFhO1FBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7OztJQUVELElBQUksWUFBWTtRQUNkLE9BQU87WUFDTCxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJO1lBQ3hCLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUk7WUFDdkIsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixJQUFJO1NBQ3RDLENBQUM7SUFDSixDQUFDOzs7O0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTztZQUNMLGNBQWMsRUFBRSxJQUFJLENBQUMsS0FBSztZQUMxQixpQkFBaUIsRUFBRSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsSUFBSTtTQUNqRCxDQUFDO0lBQ0osQ0FBQzs7OztJQUVELElBQUksV0FBVzs7Y0FDUCxXQUFXLEdBQUcsRUFBRTs7Y0FDaEIsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDOztjQUMvQyxPQUFPLEdBQUcsUUFBUTtRQUV4QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN2QyxXQUFXLENBQUMsSUFBSSxtQkFDWCxJQUFJLENBQUMsU0FBUyxJQUNqQixjQUFjLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQzdCLE1BQU0sRUFBRSxHQUFHLFFBQVEsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxPQUFPLElBQUksRUFDM0MsS0FBSyxFQUFFLEdBQUcsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLE9BQU8sSUFBSSxJQUMxQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsUUFBUTtJQUNSLENBQUM7OztZQTNERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsUUFBUSxFQUFFOzs7OztHQUtUOzthQUVGOzs7OzttQkFNRSxLQUFLO2dDQUNMLEtBQUs7b0JBQ0wsS0FBSzs7OztJQUZOLDJDQUFtQjs7SUFDbkIsd0RBQWtDOztJQUNsQyw0Q0FBd0I7O0lBRXhCLCtDQUFhOztJQUNiLHVEQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtZmluZ2VycHJpbnQtc3Bpbm5lcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImZpbmdlcnByaW50LXNwaW5uZXJcIiBbbmdTdHlsZV09XCJzcGlubmVyU3R5bGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzcGlubmVyLXJpbmdcIiAqbmdGb3I9XCJsZXQgcnMgb2YgcmluZ3NTdHlsZXNcIiBbbmdTdHlsZV09XCJyc1wiPjwvZGl2PlxuICAgIDwvZGl2PlxuXG4gIGAsXG4gIHN0eWxlVXJsczogWycuL2ZpbmdlcnByaW50LXNwaW5uZXIuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIEZpbmdlcnByaW50U3Bpbm5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICBASW5wdXQoKSBzaXplID0gNjA7XG4gIEBJbnB1dCgpIGFuaW1hdGlvbkR1cmF0aW9uID0gMTUwMDtcbiAgQElucHV0KCkgY29sb3IgPSAnI2ZmZic7XG5cbiAgcmluZ3NOdW0gPSA5O1xuICBjb250YWluZXJQYWRkaW5nID0gMjtcblxuICBnZXQgb3V0ZXJSaW5nU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNpemUgLSB0aGlzLmNvbnRhaW5lclBhZGRpbmcgKiAyO1xuICB9XG5cbiAgZ2V0IHNwaW5uZXJTdHlsZSgpOiBvYmplY3Qge1xuICAgIHJldHVybiB7XG4gICAgICBoZWlnaHQ6IGAke3RoaXMuc2l6ZX1weGAsXG4gICAgICB3aWR0aDogYCR7dGhpcy5zaXplfXB4YCxcbiAgICAgIHBhZGRpbmc6IGAke3RoaXMuY29udGFpbmVyUGFkZGluZ31weGBcbiAgICB9O1xuICB9XG5cbiAgZ2V0IHJpbmdTdHlsZSgpOiBvYmplY3Qge1xuICAgIHJldHVybiB7XG4gICAgICBib3JkZXJUb3BDb2xvcjogdGhpcy5jb2xvcixcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBgJHt0aGlzLmFuaW1hdGlvbkR1cmF0aW9ufW1zYFxuICAgIH07XG4gIH1cblxuICBnZXQgcmluZ3NTdHlsZXMoKTogb2JqZWN0IHtcbiAgICBjb25zdCByaW5nc1N0eWxlcyA9IFtdO1xuICAgIGNvbnN0IHJpbmdCYXNlID0gdGhpcy5vdXRlclJpbmdTaXplIC8gKHRoaXMucmluZ3NOdW0pO1xuICAgIGNvbnN0IHJpbmdJbmMgPSByaW5nQmFzZTtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRoaXMucmluZ3NOdW07IGkrKykge1xuICAgICAgcmluZ3NTdHlsZXMucHVzaCh7XG4gICAgICAgIC4uLnRoaXMucmluZ1N0eWxlLFxuICAgICAgICBhbmltYXRpb25EZWxheTogYCR7aSAqIDUwfW1zYCxcbiAgICAgICAgaGVpZ2h0OiBgJHtyaW5nQmFzZSArIChpICsgMSkgKiByaW5nSW5jfXB4YCxcbiAgICAgICAgd2lkdGg6IGAke3JpbmdCYXNlICsgKGkgKyAxKSAqIHJpbmdJbmN9cHhgLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJpbmdzU3R5bGVzO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19