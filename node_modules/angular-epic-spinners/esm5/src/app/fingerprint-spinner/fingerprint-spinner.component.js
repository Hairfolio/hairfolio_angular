/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
var FingerprintSpinnerComponent = /** @class */ (function () {
    function FingerprintSpinnerComponent() {
        this.size = 60;
        this.animationDuration = 1500;
        this.color = '#fff';
        this.ringsNum = 9;
        this.containerPadding = 2;
    }
    Object.defineProperty(FingerprintSpinnerComponent.prototype, "outerRingSize", {
        get: /**
         * @return {?}
         */
        function () {
            return this.size - this.containerPadding * 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FingerprintSpinnerComponent.prototype, "spinnerStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                height: this.size + "px",
                width: this.size + "px",
                padding: this.containerPadding + "px"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FingerprintSpinnerComponent.prototype, "ringStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                borderTopColor: this.color,
                animationDuration: this.animationDuration + "ms"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FingerprintSpinnerComponent.prototype, "ringsStyles", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var ringsStyles = [];
            /** @type {?} */
            var ringBase = this.outerRingSize / (this.ringsNum);
            /** @type {?} */
            var ringInc = ringBase;
            for (var i = 1; i <= this.ringsNum; i++) {
                ringsStyles.push(tslib_1.__assign({}, this.ringStyle, { animationDelay: i * 50 + "ms", height: ringBase + (i + 1) * ringInc + "px", width: ringBase + (i + 1) * ringInc + "px" }));
            }
            return ringsStyles;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FingerprintSpinnerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    FingerprintSpinnerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-fingerprint-spinner',
                    template: "\n    <div class=\"fingerprint-spinner\" [ngStyle]=\"spinnerStyle\">\n      <div class=\"spinner-ring\" *ngFor=\"let rs of ringsStyles\" [ngStyle]=\"rs\"></div>\n    </div>\n\n  ",
                    styles: [".fingerprint-spinner,.fingerprint-spinner *{box-sizing:border-box}.fingerprint-spinner{height:64px;width:64px;padding:2px;overflow:hidden;position:relative}.fingerprint-spinner .spinner-ring{position:absolute;border-radius:50%;border:2px solid transparent;border-top-color:#ff1d5e;-webkit-animation:1.5s cubic-bezier(.68,-.75,.265,1.75) infinite forwards fingerprint-spinner-animation;animation:1.5s cubic-bezier(.68,-.75,.265,1.75) infinite forwards fingerprint-spinner-animation;margin:auto;bottom:0;left:0;right:0;top:0}.fingerprint-spinner .spinner-ring:nth-child(1){height:calc(60px / 9 + 0 * 60px / 9);width:calc(60px / 9 + 0 * 60px / 9);-webkit-animation-delay:calc(50ms * 1);animation-delay:calc(50ms * 1)}.fingerprint-spinner .spinner-ring:nth-child(2){height:calc(60px / 9 + 1 * 60px / 9);width:calc(60px / 9 + 1 * 60px / 9);-webkit-animation-delay:calc(50ms * 2);animation-delay:calc(50ms * 2)}.fingerprint-spinner .spinner-ring:nth-child(3){height:calc(60px / 9 + 2 * 60px / 9);width:calc(60px / 9 + 2 * 60px / 9);-webkit-animation-delay:calc(50ms * 3);animation-delay:calc(50ms * 3)}.fingerprint-spinner .spinner-ring:nth-child(4){height:calc(60px / 9 + 3 * 60px / 9);width:calc(60px / 9 + 3 * 60px / 9);-webkit-animation-delay:calc(50ms * 4);animation-delay:calc(50ms * 4)}.fingerprint-spinner .spinner-ring:nth-child(5){height:calc(60px / 9 + 4 * 60px / 9);width:calc(60px / 9 + 4 * 60px / 9);-webkit-animation-delay:calc(50ms * 5);animation-delay:calc(50ms * 5)}.fingerprint-spinner .spinner-ring:nth-child(6){height:calc(60px / 9 + 5 * 60px / 9);width:calc(60px / 9 + 5 * 60px / 9);-webkit-animation-delay:calc(50ms * 6);animation-delay:calc(50ms * 6)}.fingerprint-spinner .spinner-ring:nth-child(7){height:calc(60px / 9 + 6 * 60px / 9);width:calc(60px / 9 + 6 * 60px / 9);-webkit-animation-delay:calc(50ms * 7);animation-delay:calc(50ms * 7)}.fingerprint-spinner .spinner-ring:nth-child(8){height:calc(60px / 9 + 7 * 60px / 9);width:calc(60px / 9 + 7 * 60px / 9);-webkit-animation-delay:calc(50ms * 8);animation-delay:calc(50ms * 8)}.fingerprint-spinner .spinner-ring:nth-child(9){height:calc(60px / 9 + 8 * 60px / 9);width:calc(60px / 9 + 8 * 60px / 9);-webkit-animation-delay:calc(50ms * 9);animation-delay:calc(50ms * 9)}@-webkit-keyframes fingerprint-spinner-animation{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fingerprint-spinner-animation{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}"]
                }] }
    ];
    /** @nocollapse */
    FingerprintSpinnerComponent.ctorParameters = function () { return []; };
    FingerprintSpinnerComponent.propDecorators = {
        size: [{ type: Input }],
        animationDuration: [{ type: Input }],
        color: [{ type: Input }]
    };
    return FingerprintSpinnerComponent;
}());
export { FingerprintSpinnerComponent };
if (false) {
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.size;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.color;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.ringsNum;
    /** @type {?} */
    FingerprintSpinnerComponent.prototype.containerPadding;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZ2VycHJpbnQtc3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWVwaWMtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJzcmMvYXBwL2ZpbmdlcnByaW50LXNwaW5uZXIvZmluZ2VycHJpbnQtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUV6RDtJQVlFO1FBR1MsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNWLHNCQUFpQixHQUFHLElBQUksQ0FBQztRQUN6QixVQUFLLEdBQUcsTUFBTSxDQUFDO1FBRXhCLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFDYixxQkFBZ0IsR0FBRyxDQUFDLENBQUM7SUFQckIsQ0FBQztJQVNELHNCQUFJLHNEQUFhOzs7O1FBQWpCO1lBQ0UsT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7UUFDL0MsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxxREFBWTs7OztRQUFoQjtZQUNFLE9BQU87Z0JBQ0wsTUFBTSxFQUFLLElBQUksQ0FBQyxJQUFJLE9BQUk7Z0JBQ3hCLEtBQUssRUFBSyxJQUFJLENBQUMsSUFBSSxPQUFJO2dCQUN2QixPQUFPLEVBQUssSUFBSSxDQUFDLGdCQUFnQixPQUFJO2FBQ3RDLENBQUM7UUFDSixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGtEQUFTOzs7O1FBQWI7WUFDRSxPQUFPO2dCQUNMLGNBQWMsRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDMUIsaUJBQWlCLEVBQUssSUFBSSxDQUFDLGlCQUFpQixPQUFJO2FBQ2pELENBQUM7UUFDSixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG9EQUFXOzs7O1FBQWY7O2dCQUNRLFdBQVcsR0FBRyxFQUFFOztnQkFDaEIsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDOztnQkFDL0MsT0FBTyxHQUFHLFFBQVE7WUFFeEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ3ZDLFdBQVcsQ0FBQyxJQUFJLHNCQUNYLElBQUksQ0FBQyxTQUFTLElBQ2pCLGNBQWMsRUFBSyxDQUFDLEdBQUcsRUFBRSxPQUFJLEVBQzdCLE1BQU0sRUFBSyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsT0FBTyxPQUFJLEVBQzNDLEtBQUssRUFBSyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsT0FBTyxPQUFJLElBQzFDLENBQUM7YUFDSjtZQUVELE9BQU8sV0FBVyxDQUFDO1FBQ3JCLENBQUM7OztPQUFBOzs7O0lBRUQsOENBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7Z0JBM0RGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUsb0xBS1Q7O2lCQUVGOzs7Ozt1QkFNRSxLQUFLO29DQUNMLEtBQUs7d0JBQ0wsS0FBSzs7SUE0Q1Isa0NBQUM7Q0FBQSxBQTdERCxJQTZEQztTQW5EWSwyQkFBMkI7OztJQUt0QywyQ0FBbUI7O0lBQ25CLHdEQUFrQzs7SUFDbEMsNENBQXdCOztJQUV4QiwrQ0FBYTs7SUFDYix1REFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLWZpbmdlcnByaW50LXNwaW5uZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJmaW5nZXJwcmludC1zcGlubmVyXCIgW25nU3R5bGVdPVwic3Bpbm5lclN0eWxlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3Bpbm5lci1yaW5nXCIgKm5nRm9yPVwibGV0IHJzIG9mIHJpbmdzU3R5bGVzXCIgW25nU3R5bGVdPVwicnNcIj48L2Rpdj5cbiAgICA8L2Rpdj5cblxuICBgLFxuICBzdHlsZVVybHM6IFsnLi9maW5nZXJwcmludC1zcGlubmVyLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBGaW5nZXJwcmludFNwaW5uZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgQElucHV0KCkgc2l6ZSA9IDYwO1xuICBASW5wdXQoKSBhbmltYXRpb25EdXJhdGlvbiA9IDE1MDA7XG4gIEBJbnB1dCgpIGNvbG9yID0gJyNmZmYnO1xuXG4gIHJpbmdzTnVtID0gOTtcbiAgY29udGFpbmVyUGFkZGluZyA9IDI7XG5cbiAgZ2V0IG91dGVyUmluZ1NpemUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5zaXplIC0gdGhpcy5jb250YWluZXJQYWRkaW5nICogMjtcbiAgfVxuXG4gIGdldCBzcGlubmVyU3R5bGUoKTogb2JqZWN0IHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0OiBgJHt0aGlzLnNpemV9cHhgLFxuICAgICAgd2lkdGg6IGAke3RoaXMuc2l6ZX1weGAsXG4gICAgICBwYWRkaW5nOiBgJHt0aGlzLmNvbnRhaW5lclBhZGRpbmd9cHhgXG4gICAgfTtcbiAgfVxuXG4gIGdldCByaW5nU3R5bGUoKTogb2JqZWN0IHtcbiAgICByZXR1cm4ge1xuICAgICAgYm9yZGVyVG9wQ29sb3I6IHRoaXMuY29sb3IsXG4gICAgICBhbmltYXRpb25EdXJhdGlvbjogYCR7dGhpcy5hbmltYXRpb25EdXJhdGlvbn1tc2BcbiAgICB9O1xuICB9XG5cbiAgZ2V0IHJpbmdzU3R5bGVzKCk6IG9iamVjdCB7XG4gICAgY29uc3QgcmluZ3NTdHlsZXMgPSBbXTtcbiAgICBjb25zdCByaW5nQmFzZSA9IHRoaXMub3V0ZXJSaW5nU2l6ZSAvICh0aGlzLnJpbmdzTnVtKTtcbiAgICBjb25zdCByaW5nSW5jID0gcmluZ0Jhc2U7XG5cbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSB0aGlzLnJpbmdzTnVtOyBpKyspIHtcbiAgICAgIHJpbmdzU3R5bGVzLnB1c2goe1xuICAgICAgICAuLi50aGlzLnJpbmdTdHlsZSxcbiAgICAgICAgYW5pbWF0aW9uRGVsYXk6IGAke2kgKiA1MH1tc2AsXG4gICAgICAgIGhlaWdodDogYCR7cmluZ0Jhc2UgKyAoaSArIDEpICogcmluZ0luY31weGAsXG4gICAgICAgIHdpZHRoOiBgJHtyaW5nQmFzZSArIChpICsgMSkgKiByaW5nSW5jfXB4YCxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiByaW5nc1N0eWxlcztcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiJdfQ==