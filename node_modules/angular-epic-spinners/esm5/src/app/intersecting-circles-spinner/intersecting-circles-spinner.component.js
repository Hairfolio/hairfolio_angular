/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
var IntersectingCirclesSpinnerComponent = /** @class */ (function () {
    function IntersectingCirclesSpinnerComponent() {
        this.animationDuration = 1200;
        this.size = 70;
        this.color = '#fff';
    }
    Object.defineProperty(IntersectingCirclesSpinnerComponent.prototype, "circleSize", {
        get: /**
         * @return {?}
         */
        function () {
            return this.size / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IntersectingCirclesSpinnerComponent.prototype, "spinnerStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                width: this.size + "px",
                height: this.size + "px"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IntersectingCirclesSpinnerComponent.prototype, "spinnerBlockStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                animationDuration: this.animationDuration + "ms",
                width: this.circleSize + "px",
                height: this.circleSize + "px"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IntersectingCirclesSpinnerComponent.prototype, "circleStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                borderColor: this.color
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IntersectingCirclesSpinnerComponent.prototype, "circleStyles", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var circlesPositions = [
                { top: 0, left: 0 },
                { left: this.circleSize * -0.36 + "px", top: this.circleSize * 0.2 + "px" },
                { left: this.circleSize * -0.36 + "px", top: this.circleSize * -0.2 + "px" },
                { left: 0, top: this.circleSize * -0.36 + "px" },
                { left: this.circleSize * 0.36 + "px", top: this.circleSize * -0.2 + "px" },
                { left: this.circleSize * 0.36 + "px", top: this.circleSize * 0.2 + "px" },
                { left: 0, top: this.circleSize * 0.36 + "px" }
            ];
            return circlesPositions.map(function (cp) {
                return tslib_1.__assign({ cp: cp }, _this.circleStyle);
            });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    IntersectingCirclesSpinnerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    IntersectingCirclesSpinnerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-intersecting-circles-spinner',
                    template: "\n    <div class=\"intersecting-circles-spinner\" [ngStyle]=\"spinnerStyle\">\n      <div class=\"spinnerBlock\" [ngStyle]=\"spinnerBlockStyle\">\n        <span class=\"circle\" *ngFor=\"let cs of circleStyles\" [ngStyle]=\"cs\"></span>\n      </div>\n    </div>\n  ",
                    styles: [".intersecting-circles-spinner,.intersecting-circles-spinner *{box-sizing:border-box}.intersecting-circles-spinner{height:70px;width:70px;position:relative;display:flex;flex-direction:row;justify-content:center;align-items:center}.intersecting-circles-spinner .spinnerBlock{-webkit-animation:1.2s linear infinite intersecting-circles-spinners-animation;animation:1.2s linear infinite intersecting-circles-spinners-animation;-webkit-transform-origin:center;transform-origin:center;display:block;height:35px;width:35px}.intersecting-circles-spinner .circle{display:block;border:2px solid #ff1d5e;border-radius:50%;height:100%;width:100%;position:absolute;left:0;top:0}.intersecting-circles-spinner .circle:nth-child(1){left:0;top:0}.intersecting-circles-spinner .circle:nth-child(2){left:calc(35px * -.36);top:calc(35px * .2)}.intersecting-circles-spinner .circle:nth-child(3){left:calc(35px * -.36);top:calc(35px * -.2)}.intersecting-circles-spinner .circle:nth-child(4){left:0;top:calc(35px * -.36)}.intersecting-circles-spinner .circle:nth-child(5){left:calc(35px * .36);top:calc(35px * -.2)}.intersecting-circles-spinner .circle:nth-child(6){left:calc(35px * .36);top:calc(35px * .2)}.intersecting-circles-spinner .circle:nth-child(7){left:0;top:calc(35px * .36)}@-webkit-keyframes intersecting-circles-spinners-animation{from{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes intersecting-circles-spinners-animation{from{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}"]
                }] }
    ];
    /** @nocollapse */
    IntersectingCirclesSpinnerComponent.ctorParameters = function () { return []; };
    IntersectingCirclesSpinnerComponent.propDecorators = {
        animationDuration: [{ type: Input }],
        size: [{ type: Input }],
        color: [{ type: Input }]
    };
    return IntersectingCirclesSpinnerComponent;
}());
export { IntersectingCirclesSpinnerComponent };
if (false) {
    /** @type {?} */
    IntersectingCirclesSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    IntersectingCirclesSpinnerComponent.prototype.size;
    /** @type {?} */
    IntersectingCirclesSpinnerComponent.prototype.color;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJzZWN0aW5nLWNpcmNsZXMtc3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWVwaWMtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJzcmMvYXBwL2ludGVyc2VjdGluZy1jaXJjbGVzLXNwaW5uZXIvaW50ZXJzZWN0aW5nLWNpcmNsZXMtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUV2RDtJQWFFO1FBR1Msc0JBQWlCLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLFNBQUksR0FBRyxFQUFFLENBQUM7UUFDVixVQUFLLEdBQUcsTUFBTSxDQUFDO0lBSnhCLENBQUM7SUFNRCxzQkFBSSwyREFBVTs7OztRQUFkO1lBQ0UsT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztRQUN2QixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDZEQUFZOzs7O1FBQWhCO1lBQ0UsT0FBTztnQkFDTCxLQUFLLEVBQUssSUFBSSxDQUFDLElBQUksT0FBSTtnQkFDdkIsTUFBTSxFQUFLLElBQUksQ0FBQyxJQUFJLE9BQUk7YUFDekIsQ0FBQztRQUNKLENBQUM7OztPQUFBO0lBRUQsc0JBQUksa0VBQWlCOzs7O1FBQXJCO1lBQ0UsT0FBTztnQkFDTCxpQkFBaUIsRUFBSyxJQUFJLENBQUMsaUJBQWlCLE9BQUk7Z0JBQ2hELEtBQUssRUFBSyxJQUFJLENBQUMsVUFBVSxPQUFJO2dCQUM3QixNQUFNLEVBQUssSUFBSSxDQUFDLFVBQVUsT0FBSTthQUMvQixDQUFDO1FBQ0osQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSw0REFBVzs7OztRQUFmO1lBQ0UsT0FBTztnQkFDTCxXQUFXLEVBQUUsSUFBSSxDQUFDLEtBQUs7YUFDeEIsQ0FBQztRQUNKLENBQUM7OztPQUFBO0lBRUQsc0JBQUksNkRBQVk7Ozs7UUFBaEI7WUFBQSxpQkFjQzs7Z0JBYk8sZ0JBQWdCLEdBQUc7Z0JBQ3ZCLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFDO2dCQUNqQixFQUFDLElBQUksRUFBSyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsSUFBSSxPQUFJLEVBQUUsR0FBRyxFQUFLLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxPQUFJLEVBQUM7Z0JBQ3pFLEVBQUMsSUFBSSxFQUFLLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLE9BQUksRUFBRSxHQUFHLEVBQUssSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLEdBQUcsT0FBSSxFQUFDO2dCQUMxRSxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFLLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLE9BQUksRUFBQztnQkFDOUMsRUFBQyxJQUFJLEVBQUssSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLE9BQUksRUFBRSxHQUFHLEVBQUssSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLEdBQUcsT0FBSSxFQUFDO2dCQUN6RSxFQUFDLElBQUksRUFBSyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksT0FBSSxFQUFFLEdBQUcsRUFBSyxJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsT0FBSSxFQUFDO2dCQUN4RSxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFLLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxPQUFJLEVBQUM7YUFDOUM7WUFFRCxPQUFPLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxVQUFDLEVBQUU7Z0JBQzdCLDBCQUFRLEVBQUUsSUFBQSxJQUFLLEtBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbkMsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDOzs7T0FBQTs7OztJQUVELHNEQUFROzs7SUFBUjtJQUNBLENBQUM7O2dCQTlERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGtDQUFrQztvQkFDNUMsUUFBUSxFQUFFLDRRQU1UOztpQkFFRjs7Ozs7b0NBTUUsS0FBSzt1QkFDTCxLQUFLO3dCQUNMLEtBQUs7O0lBOENSLDBDQUFDO0NBQUEsQUFoRUQsSUFnRUM7U0FyRFksbUNBQW1DOzs7SUFLOUMsZ0VBQWtDOztJQUNsQyxtREFBbUI7O0lBQ25CLG9EQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLWludGVyc2VjdGluZy1jaXJjbGVzLXNwaW5uZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJpbnRlcnNlY3RpbmctY2lyY2xlcy1zcGlubmVyXCIgW25nU3R5bGVdPVwic3Bpbm5lclN0eWxlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3Bpbm5lckJsb2NrXCIgW25nU3R5bGVdPVwic3Bpbm5lckJsb2NrU3R5bGVcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJjaXJjbGVcIiAqbmdGb3I9XCJsZXQgY3Mgb2YgY2lyY2xlU3R5bGVzXCIgW25nU3R5bGVdPVwiY3NcIj48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJy4vaW50ZXJzZWN0aW5nLWNpcmNsZXMtc3Bpbm5lci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgSW50ZXJzZWN0aW5nQ2lyY2xlc1NwaW5uZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgQElucHV0KCkgYW5pbWF0aW9uRHVyYXRpb24gPSAxMjAwO1xuICBASW5wdXQoKSBzaXplID0gNzA7XG4gIEBJbnB1dCgpIGNvbG9yID0gJyNmZmYnO1xuXG4gIGdldCBjaXJjbGVTaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSAvIDI7XG4gIH1cblxuICBnZXQgc3Bpbm5lclN0eWxlKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdpZHRoOiBgJHt0aGlzLnNpemV9cHhgLFxuICAgICAgaGVpZ2h0OiBgJHt0aGlzLnNpemV9cHhgXG4gICAgfTtcbiAgfVxuXG4gIGdldCBzcGlubmVyQmxvY2tTdHlsZSgpOiBvYmplY3Qge1xuICAgIHJldHVybiB7XG4gICAgICBhbmltYXRpb25EdXJhdGlvbjogYCR7dGhpcy5hbmltYXRpb25EdXJhdGlvbn1tc2AsXG4gICAgICB3aWR0aDogYCR7dGhpcy5jaXJjbGVTaXplfXB4YCxcbiAgICAgIGhlaWdodDogYCR7dGhpcy5jaXJjbGVTaXplfXB4YFxuICAgIH07XG4gIH1cblxuICBnZXQgY2lyY2xlU3R5bGUoKTogb2JqZWN0IHtcbiAgICByZXR1cm4ge1xuICAgICAgYm9yZGVyQ29sb3I6IHRoaXMuY29sb3JcbiAgICB9O1xuICB9XG5cbiAgZ2V0IGNpcmNsZVN0eWxlcygpOiBvYmplY3Qge1xuICAgIGNvbnN0IGNpcmNsZXNQb3NpdGlvbnMgPSBbXG4gICAgICB7dG9wOiAwLCBsZWZ0OiAwfSxcbiAgICAgIHtsZWZ0OiBgJHt0aGlzLmNpcmNsZVNpemUgKiAtMC4zNn1weGAsIHRvcDogYCR7dGhpcy5jaXJjbGVTaXplICogMC4yfXB4YH0sXG4gICAgICB7bGVmdDogYCR7dGhpcy5jaXJjbGVTaXplICogLTAuMzZ9cHhgLCB0b3A6IGAke3RoaXMuY2lyY2xlU2l6ZSAqIC0wLjJ9cHhgfSxcbiAgICAgIHtsZWZ0OiAwLCB0b3A6IGAke3RoaXMuY2lyY2xlU2l6ZSAqIC0wLjM2fXB4YH0sXG4gICAgICB7bGVmdDogYCR7dGhpcy5jaXJjbGVTaXplICogMC4zNn1weGAsIHRvcDogYCR7dGhpcy5jaXJjbGVTaXplICogLTAuMn1weGB9LFxuICAgICAge2xlZnQ6IGAke3RoaXMuY2lyY2xlU2l6ZSAqIDAuMzZ9cHhgLCB0b3A6IGAke3RoaXMuY2lyY2xlU2l6ZSAqIDAuMn1weGB9LFxuICAgICAge2xlZnQ6IDAsIHRvcDogYCR7dGhpcy5jaXJjbGVTaXplICogMC4zNn1weGB9XG4gICAgXTtcblxuICAgIHJldHVybiBjaXJjbGVzUG9zaXRpb25zLm1hcCgoY3ApID0+IHtcbiAgICAgIHJldHVybiB7Y3AsIC4uLnRoaXMuY2lyY2xlU3R5bGV9O1xuICAgIH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19