/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
var SwappingSquaresSpinnerComponent = /** @class */ (function () {
    function SwappingSquaresSpinnerComponent() {
        this.animationDuration = 1000;
        this.size = 65;
        this.color = '#fff';
        this.animationBaseName = 'swapping-square-animation-child';
        this.squaresNum = 4;
    }
    Object.defineProperty(SwappingSquaresSpinnerComponent.prototype, "spinnerStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                height: this.size + "px",
                width: this.size + "px"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SwappingSquaresSpinnerComponent.prototype, "squareStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                height: this.size * 0.25 / 1.3 + "px",
                width: this.size * 0.25 / 1.3 + "px",
                animationDuration: this.animationDuration + "ms",
                borderWidth: this.size * 0.04 / 1.3 + "px",
                borderColor: this.color
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SwappingSquaresSpinnerComponent.prototype, "squaresStyles", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var squaresStyles = [];
            /** @type {?} */
            var delay = this.animationDuration * 0.5;
            for (var i = 1; i <= this.squaresNum; i++) {
                squaresStyles.push(tslib_1.__assign({ animationDelay: (i % 2 === 0 ? delay : 0) + "ms" }, this.squareStyle));
            }
            return squaresStyles;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SwappingSquaresSpinnerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    SwappingSquaresSpinnerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-swapping-squares-spinner',
                    template: "\n    <div class=\"swapping-squares-spinner\" [ngStyle]=\"spinnerStyle\">\n      <div class=\"square\"\n           *ngFor=\"let ss of squaresStyles; let i = index;\"\n           [ngClass]=\"'square-' + (i + 1)\"\n           [ngStyle]=\"ss\">\n      </div>\n    </div>\n  ",
                    styles: [".swapping-squares-spinner,.swapping-squares-spinner *{box-sizing:border-box}.swapping-squares-spinner{height:65px;width:65px;position:relative;display:flex;flex-direction:row;justify-content:center;align-items:center}.swapping-squares-spinner .square{height:calc(65px * .25 / 1.3);width:calc(65px * .25 / 1.3);-webkit-animation-duration:1s;animation-duration:1s;border:solid #ff1d5e;margin-right:auto;margin-left:auto;position:absolute;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.swapping-squares-spinner .square:nth-child(1){-webkit-animation-name:swapping-squares-animation-child-1;animation-name:swapping-squares-animation-child-1;-webkit-animation-delay:.5s;animation-delay:.5s}.swapping-squares-spinner .square:nth-child(2){-webkit-animation-name:swapping-squares-animation-child-2;animation-name:swapping-squares-animation-child-2;-webkit-animation-delay:0s;animation-delay:0s}.swapping-squares-spinner .square:nth-child(3){-webkit-animation-name:swapping-squares-animation-child-3;animation-name:swapping-squares-animation-child-3;-webkit-animation-delay:.5s;animation-delay:.5s}.swapping-squares-spinner .square:nth-child(4){-webkit-animation-name:swapping-squares-animation-child-4;animation-name:swapping-squares-animation-child-4;-webkit-animation-delay:0s;animation-delay:0s}@-webkit-keyframes swapping-squares-animation-child-1{50%{-webkit-transform:translate(150%,150%) scale(2,2);transform:translate(150%,150%) scale(2,2)}}@keyframes swapping-squares-animation-child-1{50%{-webkit-transform:translate(150%,150%) scale(2,2);transform:translate(150%,150%) scale(2,2)}}@-webkit-keyframes swapping-squares-animation-child-2{50%{-webkit-transform:translate(-150%,150%) scale(2,2);transform:translate(-150%,150%) scale(2,2)}}@keyframes swapping-squares-animation-child-2{50%{-webkit-transform:translate(-150%,150%) scale(2,2);transform:translate(-150%,150%) scale(2,2)}}@-webkit-keyframes swapping-squares-animation-child-3{50%{-webkit-transform:translate(-150%,-150%) scale(2,2);transform:translate(-150%,-150%) scale(2,2)}}@keyframes swapping-squares-animation-child-3{50%{-webkit-transform:translate(-150%,-150%) scale(2,2);transform:translate(-150%,-150%) scale(2,2)}}@-webkit-keyframes swapping-squares-animation-child-4{50%{-webkit-transform:translate(150%,-150%) scale(2,2);transform:translate(150%,-150%) scale(2,2)}}@keyframes swapping-squares-animation-child-4{50%{-webkit-transform:translate(150%,-150%) scale(2,2);transform:translate(150%,-150%) scale(2,2)}}"]
                }] }
    ];
    /** @nocollapse */
    SwappingSquaresSpinnerComponent.ctorParameters = function () { return []; };
    SwappingSquaresSpinnerComponent.propDecorators = {
        animationDuration: [{ type: Input }],
        size: [{ type: Input }],
        color: [{ type: Input }]
    };
    return SwappingSquaresSpinnerComponent;
}());
export { SwappingSquaresSpinnerComponent };
if (false) {
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.animationDuration;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.size;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.color;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.animationBaseName;
    /** @type {?} */
    SwappingSquaresSpinnerComponent.prototype.squaresNum;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhcHBpbmctc3F1YXJlcy1zcGlubmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItZXBpYy1zcGlubmVycy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvc3dhcHBpbmctc3F1YXJlcy1zcGlubmVyL3N3YXBwaW5nLXNxdWFyZXMtc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUV2RDtJQWVFO1FBR1Msc0JBQWlCLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLFNBQUksR0FBRyxFQUFFLENBQUM7UUFDVixVQUFLLEdBQUcsTUFBTSxDQUFDO1FBRXhCLHNCQUFpQixHQUFHLGlDQUFpQyxDQUFDO1FBQ3RELGVBQVUsR0FBRyxDQUFDLENBQUM7SUFQZixDQUFDO0lBU0Qsc0JBQUkseURBQVk7Ozs7UUFBaEI7WUFDRSxPQUFPO2dCQUNMLE1BQU0sRUFBSyxJQUFJLENBQUMsSUFBSSxPQUFJO2dCQUN4QixLQUFLLEVBQUssSUFBSSxDQUFDLElBQUksT0FBSTthQUN4QixDQUFDO1FBQ0osQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSx3REFBVzs7OztRQUFmO1lBQ0UsT0FBTztnQkFDTCxNQUFNLEVBQUssSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsR0FBRyxPQUFJO2dCQUNyQyxLQUFLLEVBQUssSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsR0FBRyxPQUFJO2dCQUNwQyxpQkFBaUIsRUFBSyxJQUFJLENBQUMsaUJBQWlCLE9BQUk7Z0JBQ2hELFdBQVcsRUFBSyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksR0FBRyxHQUFHLE9BQUk7Z0JBQzFDLFdBQVcsRUFBRSxJQUFJLENBQUMsS0FBSzthQUN4QixDQUFDO1FBQ0osQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSwwREFBYTs7OztRQUFqQjs7Z0JBQ1EsYUFBYSxHQUFHLEVBQUU7O2dCQUNsQixLQUFLLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixHQUFHLEdBQUc7WUFFMUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ3pDLGFBQWEsQ0FBQyxJQUFJLG9CQUNoQixjQUFjLEVBQUUsQ0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQUksSUFDM0MsSUFBSSxDQUFDLFdBQVcsRUFDbkIsQ0FBQzthQUNKO1lBQ0QsT0FBTyxhQUFhLENBQUM7UUFDdkIsQ0FBQzs7O09BQUE7Ozs7SUFFRCxrREFBUTs7O0lBQVI7SUFDQSxDQUFDOztnQkF4REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw4QkFBOEI7b0JBQ3hDLFFBQVEsRUFBRSxpUkFRVDs7aUJBRUY7Ozs7O29DQU1FLEtBQUs7dUJBQ0wsS0FBSzt3QkFDTCxLQUFLOztJQXNDUixzQ0FBQztDQUFBLEFBMURELElBMERDO1NBN0NZLCtCQUErQjs7O0lBSzFDLDREQUFrQzs7SUFDbEMsK0NBQW1COztJQUNuQixnREFBd0I7O0lBRXhCLDREQUFzRDs7SUFDdEQscURBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1zd2FwcGluZy1zcXVhcmVzLXNwaW5uZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJzd2FwcGluZy1zcXVhcmVzLXNwaW5uZXJcIiBbbmdTdHlsZV09XCJzcGlubmVyU3R5bGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzcXVhcmVcIlxuICAgICAgICAgICAqbmdGb3I9XCJsZXQgc3Mgb2Ygc3F1YXJlc1N0eWxlczsgbGV0IGkgPSBpbmRleDtcIlxuICAgICAgICAgICBbbmdDbGFzc109XCInc3F1YXJlLScgKyAoaSArIDEpXCJcbiAgICAgICAgICAgW25nU3R5bGVdPVwic3NcIj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZVVybHM6IFsnLi9zd2FwcGluZy1zcXVhcmVzLXNwaW5uZXIuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFN3YXBwaW5nU3F1YXJlc1NwaW5uZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgQElucHV0KCkgYW5pbWF0aW9uRHVyYXRpb24gPSAxMDAwO1xuICBASW5wdXQoKSBzaXplID0gNjU7XG4gIEBJbnB1dCgpIGNvbG9yID0gJyNmZmYnO1xuXG4gIGFuaW1hdGlvbkJhc2VOYW1lID0gJ3N3YXBwaW5nLXNxdWFyZS1hbmltYXRpb24tY2hpbGQnO1xuICBzcXVhcmVzTnVtID0gNDtcblxuICBnZXQgc3Bpbm5lclN0eWxlKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhlaWdodDogYCR7dGhpcy5zaXplfXB4YCxcbiAgICAgIHdpZHRoOiBgJHt0aGlzLnNpemV9cHhgXG4gICAgfTtcbiAgfVxuXG4gIGdldCBzcXVhcmVTdHlsZSgpOiBvYmplY3Qge1xuICAgIHJldHVybiB7XG4gICAgICBoZWlnaHQ6IGAke3RoaXMuc2l6ZSAqIDAuMjUgLyAxLjN9cHhgLFxuICAgICAgd2lkdGg6IGAke3RoaXMuc2l6ZSAqIDAuMjUgLyAxLjN9cHhgLFxuICAgICAgYW5pbWF0aW9uRHVyYXRpb246IGAke3RoaXMuYW5pbWF0aW9uRHVyYXRpb259bXNgLFxuICAgICAgYm9yZGVyV2lkdGg6IGAke3RoaXMuc2l6ZSAqIDAuMDQgLyAxLjN9cHhgLFxuICAgICAgYm9yZGVyQ29sb3I6IHRoaXMuY29sb3JcbiAgICB9O1xuICB9XG5cbiAgZ2V0IHNxdWFyZXNTdHlsZXMoKTogb2JqZWN0IHtcbiAgICBjb25zdCBzcXVhcmVzU3R5bGVzID0gW107XG4gICAgY29uc3QgZGVsYXkgPSB0aGlzLmFuaW1hdGlvbkR1cmF0aW9uICogMC41O1xuXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gdGhpcy5zcXVhcmVzTnVtOyBpKyspIHtcbiAgICAgIHNxdWFyZXNTdHlsZXMucHVzaCh7XG4gICAgICAgIGFuaW1hdGlvbkRlbGF5OiBgJHtpICUgMiA9PT0gMCA/IGRlbGF5IDogMH1tc2AsXG4gICAgICAgIC4uLnRoaXMuc3F1YXJlU3R5bGVcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gc3F1YXJlc1N0eWxlcztcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiJdfQ==